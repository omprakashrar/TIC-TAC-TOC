{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\TIC-TAC-TOC\\\\src\\\\Components\\\\Grid\\\\Grid.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Card from \"../Card/Card.jsx\";\nimport isWinner from \"../Helpers/CheckWinner.js\";\nimport './Grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Grid({\n  numberOfCards\n}) {\n  _s();\n  const [board, setBoard] = useState(Array(numberOfCards).fill(\"\"));\n  const [turn, setTurn] = useState(true);\n  const [winner, setWinner] = useState(null);\n  function play(index) {\n    if (turn == true) {\n      setBoard[index] = 'O';\n    } else {\n      board[index] = 'X';\n    }\n  }\n  const win = isWinner(board, turn ? \"O\" : \"X\");\n  if (win) {\n    setWinner(win);\n  }\n  setBoard([...board]);\n  setTurn(!turn);\n  function reset() {\n    setTurn(true);\n    setWinner(null);\n    setBoard(Array(numberOfCards).fill(\"\"));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-wrapper\",\n    children: [winner && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"turn-highlight\",\n        children: [\"winner is \", winner, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset\",\n        onClick: reset,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"turn-highlight\",\n      children: [\"Current turn: \", turn ? 'O' : 'X']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: board.map((el, index) => /*#__PURE__*/_jsxDEV(Card, {\n        player: el,\n        onPlay: play,\n        index: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n_s(Grid, \"9RlH7XxpaBjQGoCE6TDJrfEIARk=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["useState","Card","isWinner","jsxDEV","_jsxDEV","Fragment","_Fragment","Grid","numberOfCards","_s","board","setBoard","Array","fill","turn","setTurn","winner","setWinner","play","index","win","reset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","el","player","onPlay","_c","$RefreshReg$"],"sources":["D:/React/TIC-TAC-TOC/src/Components/Grid/Grid.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport Card from \"../Card/Card.jsx\";\r\nimport isWinner from \"../Helpers/CheckWinner.js\";\r\nimport './Grid.css'\r\n\r\n\r\nfunction Grid({ numberOfCards }) {\r\n   const [board, setBoard] = useState(Array(numberOfCards).fill(\"\"));\r\n   const[turn, setTurn] = useState(true);\r\n   const [winner, setWinner] = useState(null)\r\n   function play(index) {\r\n      if(turn == true){\r\n         setBoard[index] = 'O';\r\n      }\r\n      else{\r\n         board[index]= 'X';\r\n      }\r\n   }\r\n   const win = isWinner(board, turn ? \"O\" : \"X\");\r\n   if(win){\r\n      setWinner(win);\r\n\r\n   }\r\n   setBoard([...board]);\r\n   setTurn(!turn);\r\n\r\n   function reset(){\r\n      setTurn(true);\r\n      setWinner(null);\r\n      setBoard(Array(numberOfCards).fill(\"\"))\r\n   }\r\n\r\n\r\n   return (\r\n      <div className=\"grid-wrapper\">\r\n         {\r\n            winner && (\r\n               <>\r\n               <h1 className=\"turn-highlight\">winner is {winner} </h1>\r\n               <button className=\"reset\" onClick={reset}>Reset Game</button>\r\n               </>\r\n            )\r\n         }  \r\n         <h1 className=\"turn-highlight\">Current turn: {(turn) ? 'O' : 'X'}</h1>\r\n      <div className=\"grid\">\r\n         {board.map((el, index) => <Card key={index} player={el}  onPlay = {play} index = {index}  />)}\r\n      </div>\r\n   \r\n   </div>\r\n   );\r\n}\r\n\r\nexport default Grid;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}