{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\TIC-TAC-TOC\\\\src\\\\Components\\\\Grid\\\\Grid.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Card from \"../Card/Card.jsx\";\nimport isWinner from \"../Helpers/CheckWinner.js\";\nimport './Grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Grid({\n  numberOfCards\n}) {\n  _s();\n  const [board, setBoard] = useState(Array(numberOfCards).fill(\"\"));\n  const [turn, setTurn] = useState(true);\n  const [winner, setWinner] = useState(null);\n  function play(index) {\n    if (!board[index] && !winner) {\n      const newBoard = [...board];\n      newBoard[index] = turn ? 'O' : 'X';\n      setBoard(newBoard);\n      const win = isWinner(newBoard, turn ? 'O' : 'X');\n      if (win) {\n        setWinner(win);\n      } else {\n        setTurn(!turn);\n      }\n    }\n  }\n  function reset() {\n    setTurn(true);\n    setWinner(null);\n    setBoard(Array(numberOfCards).fill(\"\"));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-wrapper\",\n    children: [winner && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"turn-highlight\",\n        children: [\"Winner is \", winner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset\",\n        onClick: reset,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"turn-highlight\",\n      children: [\"Current turn: \", turn ? 'O' : 'X']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: board.map((el, index) => /*#__PURE__*/_jsxDEV(Card, {\n        player: el,\n        onPlay: () => play(index),\n        index: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n_s(Grid, \"9RlH7XxpaBjQGoCE6TDJrfEIARk=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["useState","Card","isWinner","jsxDEV","_jsxDEV","Fragment","_Fragment","Grid","numberOfCards","_s","board","setBoard","Array","fill","turn","setTurn","winner","setWinner","play","index","newBoard","win","reset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","el","player","onPlay","_c","$RefreshReg$"],"sources":["D:/React/TIC-TAC-TOC/src/Components/Grid/Grid.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport Card from \"../Card/Card.jsx\";\r\nimport isWinner from \"../Helpers/CheckWinner.js\";\r\nimport './Grid.css';\r\n\r\nfunction Grid({ numberOfCards }) {\r\n   const [board, setBoard] = useState(Array(numberOfCards).fill(\"\"));\r\n   const [turn, setTurn] = useState(true);\r\n   const [winner, setWinner] = useState(null);\r\n\r\n   function play(index) {\r\n      if (!board[index] && !winner) {\r\n         const newBoard = [...board];\r\n         newBoard[index] = turn ? 'O' : 'X';\r\n         setBoard(newBoard);\r\n\r\n         const win = isWinner(newBoard, turn ? 'O' : 'X');\r\n         if (win) {\r\n            setWinner(win);\r\n         } else {\r\n            setTurn(!turn);\r\n         }\r\n      }\r\n   }\r\n\r\n   function reset() {\r\n      setTurn(true);\r\n      setWinner(null);\r\n      setBoard(Array(numberOfCards).fill(\"\"));\r\n   }\r\n\r\n   return (\r\n      <div className=\"grid-wrapper\">\r\n         {winner && (\r\n            <>\r\n               <h1 className=\"turn-highlight\">Winner is {winner}</h1>\r\n               <button className=\"reset\" onClick={reset}>Reset Game</button>\r\n            </>\r\n         )}\r\n         <h1 className=\"turn-highlight\">Current turn: {turn ? 'O' : 'X'}</h1>\r\n         <div className=\"grid\">\r\n            {board.map((el, index) => (\r\n               <Card key={index} player={el} onPlay={() => play(index)} index={index} />\r\n            ))}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Grid;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}